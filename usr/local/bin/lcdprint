#!/bin/bash

buffer=/tmp/lcdbuffer
reset=
shutdown_message=false
while getopts 'drts:e:qw:' opt;do
    case $opt in
        d)
            shutdown_message=true
            ;;
        t)
            time=true
            ;;
        r)
            reset=true
            ;;
        s)
            start=$OPTARG
            ;;
        e)
            end=$OPTARG
            ;;
        q)
            quit=true
            ;;
        w)
            wakeup_time=$OPTARG
            ;;
    esac
done
shift $(($OPTIND -1))

if [ -n "$reset" ];then
    printf '                                ' > /dev/lcd0
    rm -f $buffer
    exit
fi

if [ "$shutdown_message" = "true" ];then
    printf 'GOING TO HALT   !!!!!!!!!!!!!'  > /dev/lcd0
    exit
fi
if [ -n "$quit" ];then
    if [ -n "$wakeup_time" ];then
        # 2011/05/02 21:23
        # NEXT 05/03 01:30

        awk -v wakeup="$wakeup_time" '
        BEGIN {
            printf("%sNEXT %s", strftime("%Y/%m/%d %H:%M"), strftime("%m/%d %H:%M", wakeup))
        }' > /dev/lcd0
    else
        # 2011/05/02 21:23
        # HALT 10 min 0.15

        uptime=$(uptime | awk -F , '{ print $1 }' | awk -F '[[:space:]]*up[[:space:]]*' '{ print $2 }')
        lavr=$(uptime | awk -F '[[:space:]]*,[[:space:]]*' '{ print $5 }')

        awk -v uptime="$uptime" -v lavr=$lavr '
        BEGIN {
            printf("%sHALT %s %s", strftime("%Y/%m/%d %H:%M"), uptime, lavr)
        }' > /dev/lcd0
    fi
    exit
fi

if [ -z "$time" ];then
    printf "$start $end\n" >> $buffer
fi

awk -v buffer=$buffer '
BEGIN {
    start = 0
    end = 0
    while ((getline < buffer) > 0) {
        if (end < $2) {
            start = $1
            end = $2
        }
    }

    if (0 < end) {
        close(buffer)
        if (systime() < end)
            printf("%sREC %s  %s", strftime("%Y/%m/%d %H:%M"), strftime("%H:%M", start), strftime("%H:%M", end))
        else
            printf("%s", strftime("%Y/%m/%d %H:%M"))
    }
    else {
        printf("%s", strftime("%Y/%m/%d %H:%M"))
    }
}' > /dev/lcd0
