#!/bin/bash

function set_wakeup_time() {
    echo 0 > /sys/class/rtc/rtc0/wakealarm
    echo -n $1 > /sys/class/rtc/rtc0/wakealarm
}

function do_wakeup() {
    shutdown -h now
}

function do_shutdown() {
    set_wakeup_time 0
    do_wakeup
}

function make_initrd() {

for rd in $(ls /boot/initrd.img* | grep -v alarm);do

    temp_dir=$(mktemp -d)
(
    cd $temp_dir
    gunzip -c $rd | cpio -id -H newc
    /bin/cp /bin/busybox bin/
    mv init init.0
    awk '/maybe_break[[:space:]]+bottom/ { exit } { print $0 }' init.0 > init

cat << 'EOF'>> init

umount $rootmnt
busybox mkswap /dev/sdc3                 || echo -n disk > /sys/power/state
busybox swapon /dev/sdc3                 || echo -n disk > /sys/power/state
[ -n "$wakeup_time" -a "$wakeup_time" -gt 0 ]      || echo -n disk > /sys/power/state

echo 0 > /sys/class/rtc/rtc0/wakealarm
echo -n $wakeup_time > /sys/class/rtc/rtc0/wakealarm

echo -n disk > /sys/power/state
EOF
    chmod 755 init
    find . | cpio -o -H newc | gzip > ${rd}-alarm 
)
    echo "CREATED : ${rd}-alarm"
    echo "TEMP_DIR: $temp_dir"

done

}


function print_help() {

cat <<EOF
USAGE: $(basename $0) OPTIONS
       -h               print help
       -l               print next wakeup time
       -m               make initramfs
       -s               shutdown and will not be wake
       -t WAKEUP_TIME   set wakeup time(seconds since the epoch time)
       -w               shutdown and will be wake
EOF
exit
}

if [ $# -eq 0 ];then
    print_help
fi

will_be_wakeup=false
wakeup_time=
while getopts 'hlmst:w' opt;do
    case $opt in
        h)
            print_help
            ;;
        l)
            awk -v wakeup=$(cat /sys/class/rtc/rtc0/wakealarm) 'BEGIN { printf("current  %s\nresume   %s\n", strftime("%Y/%m/%d %H:%M:%S", systime(), 0), strftime("%Y/%m/%d %H:%M:%S", wakeup, 0)) }'
            head -n 6 /proc/driver/rtc
            exit
            ;;
        m)
            make_initrd
            ;;
        s)
            do_shutdown
            exit
            ;;
        t)
            wakeup_time=$OPTARG
            ;;
        w)
            will_be_wakeup=true
            ;;
    esac
done

if [ -n "$wakeup_time" ];then
    set_wakeup_time $wakeup_time
fi
if [ "$will_be_wakeup" = "true" ];then
    do_wakeup
fi
