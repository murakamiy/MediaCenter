#!/bin/bash

realpath=/home/mc/xdg-user-dirs/media/ubin/realpath

function print_usb_device_list() {

    device_list=(
        ata-WDC_WD30EZRX-00D8PB0_WD-WMC4N0637164
        ata-WDC_WD30EZRX-00D8PB0_WD-WMC4N0640397
        ata-WDC_WD30EZRX-00D8PB0_WD-WMC4N0680500
        ata-WDC_WD25EZRX-00MMMB0_WD-WCAWZ1234078
    )

    for i in ${device_list[@]};do
        if [ -h /dev/disk/by-id/${i} ];then
            $realpath /dev/disk/by-id/${i}
        fi
    done
}
function mount_usb_disk() {

    arr=($(print_usb_device_list))

    mount -o noatime,stripe=768 /dev/md0 /mnt/hd_array
    mount -o noatime ${arr[3]}1 /mnt/hd
    mount --bind /mnt/hd_array/ts_hd /home/mc/xdg-user-dirs/media/video/ts_hd
    mount --bind /mnt/hd/encode_hd   /home/mc/xdg-user-dirs/media/video/encode_hd
}

function usage() {
cat << EOF
USAGE : $(basename $0) -l OUTPUT_FILE_NAME -z
        $(basename $0) -p USB_ROOT_ID
        $(basename $0) -m USB_ROOT_ID
        $(basename $0) [-f|-d|-r|-e]
        $(basename $0) -s ARRAY_NAME
        -h print help
        -l output USB_ROOT_ID to specified file
        -m usb disk mount
        -p usb power on
        -z usb power off
        -f flush write cache buffer
        -d print usb device list
        -r start raid
        -s stop  raid ARRAY_NAME
        -e remove module for shutdown
EOF
exit 1
}
function raid_start() {
    echo "mdadm --assemble --scan"
    mdadm --assemble --scan

    echo mdadm --wait-clean --scan
    mdadm --wait-clean --scan
}
function raid_stop() {
    array_name=$1

    echo mdadm --stop /dev/$array_name
    mdadm --stop /dev/$array_name

    echo mdadm --wait-clean --scan
    mdadm --wait-clean --scan
}
function do_unmount_partition() {
    device=$1
    for p in $(tac /proc/mounts | grep "^$device" | awk '{ print $2 }');do
        echo fuser -k $p
        echo umount $p
        fuser -k $p
        umount $p
    done
}
function unmount_partition() {

    device=$1
    device_base=$(basename $device)
    array_name=$(grep ' active ' /proc/mdstat | \
        awk -v dev=$device_base '{ for (i = 5; i <= NF; i++) if (match($i, dev)) printf("%s", $1) }')

    if [ "$array_name" = "" ];then
        do_unmount_partition /dev/$device_base
    else
        do_unmount_partition /dev/$array_name
        raid_stop $array_name
    fi
}
function wait_for_usb_disk_device() {
    for i in $(seq 30);do
        echo "wait for usb disk device $i"
        count=$(print_usb_device_list | wc -l)
        if [ $count -eq 4 ];then
            echo "wait for usb disk device $i all device found"
            return 0
        fi
        sleep 1
    done

    return 1
}
function flush_disk_cache() {
    echo -e "\nusb disk flush start"
    if [ $# -eq 0 ];then
        device_list=$(print_usb_device_list)
    else
        device_list=$@
    fi

    echo sync
    sync
    for device in $device_list;do
        echo blockdev --flushbufs $device
        blockdev --flushbufs $device
        echo hdparm -F $device
        hdparm -F $device
    done
    sleep 3
    echo -e "usb disk flush end\n"
}
function do_stop() {
    device_file=$1

    unmount_partition $device_file
    flush_disk_cache $device_file

    usb_hub_path=$(udevadm info --query=path --name=$device_file | sed -r -e 's@(/[^/]+){6}$@@')
    if [ ! -e /sys/${usb_hub_path}/power/autosuspend ];then
        echo "ERROR : does not exists /sys/${usb_hub_path}/power/autosuspend"
        return 1
    fi
    if [ ! -e /sys/${usb_hub_path}/power/control ];then
        echo "ERROR : does not exists /sys/${usb_hub_path}/power/control"
        return 1
    fi

    usb_hub_id=$(udevadm info --query=path --name=$device_file | awk -F '/' '{ print $7 }')
    echo $usb_hub_id | egrep -q '[0-9.-]+'
    if [ $? -ne 0 ];then
        echo "ERROR : could not get usb_hub_id : $usb_hub_id"
        return 1
    fi

cat << EOF

unbind : $device_file
echo 1           > /sys/block/$(basename $device_file)/device/delete
echo 0           > /sys/${usb_hub_path}/power/autosuspend
echo auto        > /sys/${usb_hub_path}/power/control
echo $usb_hub_id > /sys/bus/usb/drivers/usb/unbind

EOF

    echo 1           > /sys/block/$(basename $device_file)/device/delete
    echo 0           > /sys/${usb_hub_path}/power/autosuspend
    echo auto        > /sys/${usb_hub_path}/power/control
    echo $usb_hub_id > /sys/bus/usb/drivers/usb/unbind

    return 0
}

################################################################################
################################################################################

control=
output_file=
while getopts 'defhl:m:p:rs:z' opt;do
    case $opt in
        d)
            print_usb_device_list
            exit
            ;;
        e)
            modprobe -r xhci_hcd
            exit
            ;;
        f)
            flush_disk_cache
            exit
            ;;
        h)
            usage
            ;;
        l)
            output_file=$OPTARG
            ;;
        m)
            control=mount
            usb_root=$OPTARG
            ;;
        p)
            control=on
            usb_root=$OPTARG
            ;;
        r)
            raid_start
            exit
            ;;
        s)
            raid_stop $OPTARG
            exit
            ;;
        z)
            control=off
            ;;
    esac
done
shift $(($OPTIND -1))

if [ "$control" = "" ];then
    usage
fi

if [ "$control" = "on" -o "$control" = "mount" ];then

    if [ "$usb_root" = "" ];then
        usage
    fi

    count=$(print_usb_device_list | wc -l)
    if [ $count -eq 0 ];then
        echo "echo $usb_root > /sys/bus/usb/drivers/usb/bind"
        echo $usb_root > /sys/bus/usb/drivers/usb/bind
        wait_for_usb_disk_device
        if [ $? -ne 0 ];then
            echo "ERROR : not found all usb disk device"
            exit
        fi
    fi

    raid_start

    if [ "$control" = "mount" ];then
        mount_usb_disk
        /etc/init.d/mediatomb restart
    fi

elif [ "$control" = "off" ];then

    wait_for_usb_disk_device
    if [ $? -ne 0 ];then
        echo "ERROR : not found all usb disk device"
        exit
    fi
    device_list=$(print_usb_device_list)

    for device in $device_list;do
        if [ ! -e $device ];then
            echo "ERROR : DEVICE_FILE does not exist $device"
            exit 1
        fi
        udevadm info --query=path --name=$device
        if [ $? -ne 0 ];then
            echo "ERROR : udevadm command failed $device"
            exit 1
        fi
    done

    usb_root=$(udevadm info --query=path --name=$(echo $device_list | awk '{ print $1 }') | awk -F / '{ print $5 }')
    if [ "$usb_root" = "" ];then
        echo "ERROR : could not found root device"
        exit 1
    fi

    if [ "$output_file" != "" ];then
        if [ ! -e $output_file -o -f $output_file ];then
            echo $usb_root > $output_file
        else
            echo "WARNING : could not output USB_ROOT_ID to $output_file"
        fi
    fi

    sync
    for device in $device_list;do
        do_stop $device
        if [ $? -ne 0 ];then
            exit 1
        fi
    done

    echo "echo $usb_root > /sys/bus/usb/drivers/usb/unbind"
    echo $usb_root > /sys/bus/usb/drivers/usb/unbind

else
    usage
fi
