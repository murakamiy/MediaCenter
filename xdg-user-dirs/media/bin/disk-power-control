#!/bin/bash
source $(dirname $0)/00.conf

function usage() {
cat << EOF
USAGE : $(basename $0) OPTIONS
        -h print help
        -w wait until all storage device are presented
        -m unmount hard disk
        -l print device file (large hard disk)
        -s print device file (small hard disk)
        -S print device file (small hard disk partition)
        -o optimize hard disk parameter
EOF
exit 1
}

function print_device_small() {
    if [ -h /dev/disk/by-id/$MC_DEVICE_HD_SMALL ];then
        $MC_BIN_REALPATH /dev/disk/by-id/$MC_DEVICE_HD_SMALL
    fi
}

print_device_small_partition() {
    device=$(print_device_small)
    if [ -n "$device" ];then
        mount | grep $device | grep -w ext4 | awk '{ print $1 }'
    fi
}

function print_device_large() {
    if [ -h /dev/disk/by-id/$MC_DEVICE_HD_LARGE ];then
        $MC_BIN_REALPATH /dev/disk/by-id/$MC_DEVICE_HD_LARGE
    fi
}

function print_all_storage_device() {
    (
        print_device_small
        print_device_large
    ) | sort
}

function wait_for_storage_device() {
    for i in $(seq 60);do
        echo "wait for storage device $i"
        count=$( (print_all_storage_device) | wc -l)
        if [ $count -eq 2 ];then
            echo "wait for storage device $i all device found"
            return 0
        fi
        sleep 1
    done
    return 1
}

function flush_disk_cache_soft() {
    sync
    echo 3 > /proc/sys/vm/drop_caches
    sync
}

function flush_disk_cache_hard() {
    blockdev --flushbufs $1
    hdparm -F $1
}

function unmount_disk() {

    wait_for_storage_device
    flush_disk_cache_soft

    for d in $(mount | grep ^/dev/ | awk '{ if (!($3 == "/" || $3 == "/boot")) print $1 }' | sort -u);do
        umount --all-targets --recursive $d
    done

    for d in $(print_all_storage_device);do
        flush_disk_cache_hard $d
    done
}

function optimize_param() {

    wait_for_storage_device

    small_hd=$(print_device_small)
    large_hd=$(print_device_large)

    # set Advanced Power Management feature to the highest I/O performance
#     hdparm -B 254 $small_hd

    # set standby (spindown) timeout to 10 minutes
    hdparm -S 120 $small_hd
    hdparm -S 120 $large_hd
}

while getopts 'hwmlsSo' opt;do
    case $opt in
        h)
            usage
            exit
            ;;
        w)
            wait_for_storage_device
            exit
            ;;
        m)
            unmount_disk
            exit
            ;;
        l)
            print_device_large
            exit
            ;;
        s)
            print_device_small
            exit
            ;;
        S)
            print_device_small_partition
            exit
            ;;
        o)
            optimize_param
            exit
            ;;
    esac
done
shift $(($OPTIND -1))

usage
