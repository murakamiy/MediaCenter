#!/bin/bash

export MC_CRON_TIME=23:15:00
export MC_DIR_ROOT=/home/mc/xdg-user-dirs/media
export MC_DIR_JOB=${MC_DIR_ROOT}/job
export MC_DIR_EPG=${MC_DIR_JOB}/epg
export MC_DIR_LOG=${MC_DIR_JOB}/log
MC_DIR_STATE=${MC_DIR_JOB}/state
export MC_DIR_TMP=/tmp/mc_job
export MC_DIR_RESERVED=${MC_DIR_STATE}/01_reserved
export MC_DIR_RECORDING=${MC_DIR_STATE}/02_recording
export MC_DIR_RECORD_FINISHED=${MC_DIR_STATE}/03_record_finished
export MC_DIR_JOB_FINISHED=${MC_DIR_STATE}/04_job_finished
export MC_DIR_ENCODE_RESERVED=${MC_DIR_STATE}/05_encode_reserved
export MC_DIR_ENCODING=${MC_DIR_STATE}/06_encording
export MC_DIR_ENCODE_FINISHED=${MC_DIR_STATE}/07_encorde_finished
export MC_DIR_FAILED=${MC_DIR_STATE}/failed
export MC_DIR_BACKGROUND=${MC_DIR_STATE}/background
export MC_DIR_PLAY=${MC_DIR_STATE}/play
export MC_DIR_TS=${MC_DIR_ROOT}/video/ts
export MC_DIR_TS_HD=${MC_DIR_ROOT}/video/ts_hd
export MC_DIR_MP4=${MC_DIR_ROOT}/video/mp4
export MC_DIR_THUMB=${MC_DIR_ROOT}/video/thumb
export MC_DIR_TITLE_TS=${MC_DIR_ROOT}/video/title_ts
export MC_DIR_TITLE_ENCODE=${MC_DIR_ROOT}/video/title_encode
export MC_DIR_ENCODE=${MC_DIR_ROOT}/video/encode
export MC_DIR_ENCODE_HD=${MC_DIR_ROOT}/video/encode_hd
export MC_DIR_REMOVED=${MC_DIR_ROOT}/video/removed
export MC_DEVICE_USB_DISK_TS=/dev/md0
export MC_FILE_CHANNEL_DIGITAL=${MC_DIR_JOB}/channel/digital
export MC_FILE_CHANNEL_BS=${MC_DIR_JOB}/channel/bs
export MC_FILE_CHANNEL_CS=${MC_DIR_JOB}/channel/cs
export MC_FILE_LOG=${MC_DIR_LOG}/$(date +%Y%m%d)
export MC_STAT_MIGRATE=${MC_DIR_STATE}/usb_migrate_run
MC_DIR_BIN=${MC_DIR_ROOT}/bin
MC_DIR_UBIN=${MC_DIR_ROOT}/ubin
export MC_FILE_THUMB=${MC_DIR_BIN}/provider_tv.png
export MC_BIN_NAUTILUS_PNG=${MC_DIR_BIN}/nautilus
export MC_BIN_DO_JOB=${MC_DIR_BIN}/do_job.sh
export MC_BIN_ENCODE=${MC_DIR_BIN}/encode.sh
export MC_BIN_RESERVER=${MC_DIR_BIN}/reserver/main.py
export MC_BIN_SAFE_SHUTDOWN=${MC_DIR_BIN}/safe_shutdown.sh
export MC_BIN_WAKEUP_TIME=${MC_DIR_BIN}/wakeuptime.py
export MC_BIN_CLEAN=${MC_DIR_BIN}/clean.sh
export MC_BIN_ENCODE=${MC_DIR_BIN}/encode.sh
export MC_BIN_SMB_JOB=${MC_DIR_BIN}/smb_job.sh
export MC_BIN_EPGDUMP=${MC_DIR_BIN}/epgdump_py/epgdump.py
export MC_BIN_SMB=${MC_DIR_BIN}/smb.sh
export MC_BIN_MIGRATE=${MC_DIR_BIN}/migrate.sh
export MC_BIN_MIGRATE_JOB=${MC_DIR_BIN}/migrate_job.sh
export MC_BIN_EPGTIME=${MC_DIR_BIN}/epgtime.py
export MC_BIN_REC=/usr/local/bin/recpt1
export MC_BIN_WAKEUPTOOL=${MC_DIR_UBIN}/wakeuptool
export MC_BIN_MYMPLAYER=${MC_DIR_UBIN}/mymplayer
export MC_BIN_MYVLC=${MC_DIR_UBIN}/myvlc
export MC_BIN_USB_CONTROL=${MC_DIR_UBIN}/disk-power-control
export MC_BIN_USB_POWER_ON=${MC_DIR_UBIN}/usb-disk-power-on
export MC_BIN_USB_POWER_OFF=${MC_DIR_UBIN}/usb-disk-power-off
export MC_BIN_USB_MOUNT=${MC_DIR_UBIN}/usb-disk-mount
export MC_DIR_DB=${MC_DIR_BIN}/database
export MC_DIR_DB_RATING=${MC_DIR_DB}/rating
export MC_DIR_RRD=${MC_DIR_BIN}/rrd
export MC_BIN_RRD=${MC_DIR_RRD}/job.sh
export PYTHONPATH=$MC_DIR_DB
export MC_SMB_SERVER=//ATERM-CE6499/Samsung-1
export MC_SMB_DISK_SIZE_GB=250
export MC_SSD_THRESHOLD=60

function xmlsel() {
    xmlstarlet sel --encode utf-8 $@ | xmlstarlet unesc
}
function log() {
    echo "$(date +%H:%M:%S)	$@	$(basename $0)" >> $MC_FILE_LOG
}
function logcat() {
    tail ${MC_DIR_LOG}/$(ls -t1 $MC_DIR_LOG | head -n 1)
}
function filename_esc() {
    cat |
    LANG=C sed -r \
    -e 's/#/♯/g' \
    -e 's/　+/_/g' \
    -e 's/[[:space:]]+/_/g' \
    -e 's/[[:punct:]]+/_/g'
}
function print_title() {
    xml_file=$1
    if [ -f "$xml_file" ];then
        xmlsel -t -m '//title' -v '.' $xml_file | filename_esc
    else
        echo UNKNOWN
    fi
}
function print_category() {
    xml_file=$1
    if [ -f "$xml_file" ];then
        xmlsel -t -m '//category' -v '.' -o __ $xml_file | sed -e 's/__$//' | filename_esc
    else
        echo UNKNOWN
    fi
}
function hard_ware_info() {
    lavg=$(uptime | awk -F 'average: ' '{ print $2 }' | tr -d ' ' | awk -F , '{ print $1}')
    temp=$(sensors | grep 'Physical id 0:' | awk -F : '{ print $2 }' | awk '{ print $1 }')
    fan=$(sensors | grep fan1 | awk '{ print $2 }')
    volt=$(sensors | grep ' V ' | awk 'BEGIN { total = 0 } { total += $2 } END { printf("%.2f\n", total) }')

    echo "$temp ${fan}RPM ${volt}V lavg=$lavg"
}
